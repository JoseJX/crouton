#!/bin/sh -e
# Copyright (c) 2017 The crouton Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a distro-specific continuation of the prepare.sh script.

DISTROAKA='gentoo'

# Set global use flags, separated by a space
set_flags() {
    while [ "$#" != 0 ]; do
        # If don't already have the flag
        if [ -z "$(euse -a $1)" ]; then
            euse -E "$1" 1> /dev/null
        fi
        shift
    done
}

# Set a package specific use flag
# Usage: set_package_flag <package> <use flag> <crouton target for comment>
set_package_flag() {
    # Make sure the package.use directory and file exist
    mkdir -p /etc/portage/package.use
    touch /etc/portage/package.use/crouton

    # Set the use flag if it's not already set
    if [ $(grep -c -F -x -e "$1 $2" /etc/portage/package.use/crouton || true) = "0" ]; then
        echo "# Added flag $2 to $1 for crouton target $3" >> /etc/portage/package.use/crouton
        echo "$1 $2" >> /etc/portage/package.use/crouton
    fi
}

# Set unstable keywords for a package
# Usage: keyword_package <package> <crouton target for comment>
keyword_package() {
    # Make sure the keywords directory and file exist
    mkdir -p /etc/portage/package.keywords
    touch /etc/portage/package.keywords/crouton

    # Check if the keyword is set for this package and if not, set it
    if [ $(grep -c -e "^$1[[:space:]]" -e "^$1$" /etc/portage/package.keywords/crouton || true) = "0" ]; then
        echo "# Added keywords for crouton target $2" >> /etc/portage/package.keywords/crouton
        echo "$1" >> /etc/portage/package.keywords/crouton
    fi
}

# Set a license
# Usage: accept_license <package> <license> <crouton target for comment>
accept_license() {
    # Make sure the package license file exists
    touch /etc/portage/package.license

    # Check if the license is set for this package and if not, set it
    if [ $(grep -c "$1[[:space:]]$2" /etc/portage/package.license || true) = "0" ]; then
        echo "# Added license for crouton target $3" >> /etc/portage/package.license
        echo "$1 $2" >> /etc/portage/package.license
    fi

    # Let the user know that we accepted the license for them
    TIPS="$TIPS
By installing $3, the license $2 has been enabled.
"
}

# Set a use expand flag
# Usage: set_use_expand <variable to expand> <flag to enable>
set_use_expand() {
    EXPAND=$(grep "^$1=" /etc/portage/make.conf || true)
    # If not, add it with the desired flag
    if [ -z "$EXPAND" ]; then
        echo "$1=\"$2\"" >> /etc/portage/make.conf
    # If the variable is already present, check if the flag is already set
    else
	# Add the flag
	if [ $(echo "$EXPAND" | grep -c "$2" || true) = "0" ]; then
            sed -i -e "s|$1=\"\(.*\)\"|$1=\"\1 $2\"|" /etc/portage/make.conf
	fi
    fi
}

# install_dist: see install() in prepare.sh for details.
install_dist() {
    local pkgs=''
    while [ "$#" != 0 ]; do
        if [ "$1" = '--' ]; then
            shift
            break
        fi
	# We ignore --minimal and --asdeps it does nothing for gentoo
	if [ ! "$1" = "--minimal" -a ! "$1" = "--asdeps" ]; then
	    pkgs="$pkgs $1";
	fi
        shift
    done
    if [ ! -z "$pkgs" ]; then
        emerge -Duv --newuse $pkgs
    fi
}


# install_pkg_dist: see install_pkg() in prepare.sh for details.
install_pkg_dist() {
    echo "GENTOO FIXME: install_pkg_dist"
}


# install_dummy_dist: see install_dummy() in prepare.sh for details.
install_dummy_dist() {
    echo "GENTOO FIXME: install_dummy_dist"
}


# remove_dist: see remove() in prepare.sh for details.
remove_dist() {
    echo "GENTOO FIXME: remove_dist"
}

# list_uninstalled_dist: see list_uninstalled() in prepare.sh for details.
# If the package is virtual (e.g. libc-dev), we need to find the binary package
# corresponding to it (e.g. libc6-dev), so that we can remove it afterwards
# ("apt-get remove libc-dev" does not remove libc6-dev).
list_uninstalled_dist() {
    echo "GENTOO FIXME: list_uninstalled_dist"
}
