#!/bin/sh -e
# Copyright (c) 2017 The crouton Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a distro-specific bootstrap script, sourced from main.sh, and as such
# has access to all of the variables set by main.sh, namely $tmp (the temporary
# directory), $INSTALLERDIR/$DISTRO, $RELEASE, $ARCH, and $MIRROR.

# Grab the latest stage3
echo 'Finding the latest stage3...' 1>&2
LATEST_STAGE3="$MIRROR/releases/$ARCH/autobuilds/latest-stage3-$ARCH.txt"
# Read the latest release, the sed matches the lines that don't start with # 
# and then removes the size (everything after the space) from the filename
STAGE3=$(wget -q -O- "$LATEST_STAGE3" | sed -n -e '/^#/! s/ .*//p')
DIR="$tmp/$RELEASE-$ARCH"
mkdir -p "$DIR"

echo "Downloading release: $STAGE3..." 1>&2
if ! wget -O- --no-verbose --timeout=60 -t2 "$MIRROR/releases/$ARCH/autobuilds/$STAGE3" | tar -C "$DIR" --strip-components=1 -jx 2>/dev/null; then
    error 1 'Failed to download stage3.'
fi

# Fetch the latest portage tree
PORTAGE="$MIRROR/snapshots/portage-latest.tar.bz2"
mkdir -p "$DIR/usr/portage"

echo "Fetching the portage tree snapshot..." 1>&2
if ! wget -O- --no-verbose --timeout=60 -t2 "$PORTAGE" | tar -C "$DIR/usr/portage" --strip-components=1 -jx 2>/dev/null; then
    error 1 'Failed to fetch the portage tree.'
fi

# If we're using a 64 bit x86 arch, build for both x86 and amd64
if [ "$ARCH" = 'amd64' ]; then
    echo 'ABI_X86="32 64"' >> "$DIR/etc/portage/make.conf"
fi

# Set beter cflags -- no, not -funroll-loops :)
sed -i 's/CFLAGS="-O2 -pipe"/CFLAGS="-O2 -pipe -march=native -mtune=native"/' "$DIR/etc/portage/make.conf"

# Set better make opts
CORE_COUNT=$(grep -c processor /proc/cpuinfo)
J_COUNT=$((CORE_COUNT + 1))
echo "MAKEOPTS=\"-j$J_COUNT\"" >> "$DIR/etc/portage/make.conf"
